#include <stdio.h>
#define MAX 10
int swap(int *x,int *y)
{
    int temp;
    temp = *x;
    *x = *y;
    *y = temp;
}
void bubblesort(int arr[],int n)
{
    int i, j;
    for (i = 0; i < n - 1; i++)
        for (j = 0; j < n - i - 1; j++)
            if (arr[j] > arr[j + 1])
                swap(&arr[j], &arr[j + 1]);
}
/*void printArray(int arr[], int size)
{
    int i;
    for (i = 0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}*/
int check(int a[],int n,int key)
{
    int i,ctr=0;
    for(i=0;i<n;i++)
    {
        if(key==a[i])
            ctr++;
    }
    return ctr;
}
int main(void) {
	// your code goes here
	int m,i,t,k,lenght=0,breadth=0,l,flag;
	printf("test cases: ");
	scanf("%d",&t);
	int ans[t];
	for(i=0;i<t;i++)
	{
	    int n;
	    printf("number of sticks: ");
	    scanf("%d",&n);
	    int size[n],visited[MAX];
	    printf("size of each stick: ");
	    for(int j=0;j<n;j++)
	    {
	        scanf("%d",&size[j]);
	    }
	    bubblesort(size,n);
        //printArray(size,n);
	    for(k=n-1;k>=0;k--)
	    {
	        if(check(size,n,size[k])>=2)
	        {
	            flag = 1;
	            lenght = size[k];
	            for(m=0;m<k-1;m++)
	            {
	                visited[m] = size[m];
	            }
	            //printArray(visited,k);
	            l=k-1;
	            break;
	        }
	        else
	            flag = 0;
	    }
	    //printf("l=%d\n",l);
	    if(l==1 || l==0)
	        flag = 0;
	    else
	    {
    	    for(k=l-1;k>=0;k--)
    	    {
    	        if(check(visited,m+1,visited[k])>=2)
    	        {
    	            flag = 1;
    	            breadth = visited[k];
    	            break;
    	        }
    	        else
    	            flag = 0;
    	    }
	    }
	    //printf("l=%d b=%d\n",lenght,breadth);
	    if(flag==1)
	        ans[i] = lenght*breadth;
	    else
	        ans[i] = -1;
	}
	printf("\n");
	for(i=0;i<t;i++)
	{
	    printf("%d\n",ans[i]);
	}
	return 0;
}

